# -*- coding: utf-8 -*-"""Module implementing Form."""from PyQt5 import QtCore, QtWidgets, QtGuifrom PyQt5.QtCore import *from PyQt5.QtWidgets import *import sys, osfrom os import removeif hasattr(sys, 'frozen'):    os.environ['PATH'] = sys._MEIPASS + ";" + os.environ['PATH']from Ui_mian import Ui_Formfrom random import shuffleimport PyQt5.sipclass ChildWindow(QDialog):    def __init__(self):        super().__init__()        self.initUI()    def initUI(self):        self.setWindowFlags(Qt.WindowCloseButtonHint)        self.setWindowTitle('必读信息')        self.resize(451, 511)        self.setFixedSize(451, 511)        self.textBrowser1 = QtWidgets.QTextBrowser(self)        self.textBrowser1.setGeometry(QtCore.QRect(0, 0, 451, 511))        self.textBrowser1.setObjectName("textBrowser1")        self.textBrowser1.setHtml('''<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'SimSun'; font-size:9pt; font-weight:400; font-style:normal;"><p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt; font-weight:600;">帮助</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt;">1.功能介绍</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    </span><span style=" font-size:12pt; color:#ff0000;">软件默认扫描软件同级目录下的文档  tiku.txt。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#ff0000;">    </span><span style=" font-size:12pt; color:#ff0000;">此文本需要自行编写或者通过获取分享文件获得。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    点击</span><span style=" font-size:12pt; font-weight:600;">鼓励作者</span><span style=" font-size:12pt;">，获取分享文件。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(1)导入题库</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    题库文件必须按照规定的格式编写，否则可能会出现无响应或不知名错误。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    文件格式：</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    选择题：第一行第一个字符为小写x,第一行最后一个字符为你的选择题答案。第二行到第五行为选项，每一行分别以大写A，B，C, D开始。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    填空题：第一行第一个字符为小写t,第一行必须为完整的题目。答案写在下面几行，填空题最多支持5个答案。答案的第一个字符为英文字符？，每一个答案占用一行。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    示例：</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">x1.下列不属于通信传输处理信号形式分类的是（）C</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">A.模拟网</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">B.数字网</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">C.传输网</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">x2.下面不属于通信网终端设备的是（）D</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">A.信源</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">B. 信宿 </span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">C. 变换器</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">D. 传输介质</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">t3.下面属于通信网终端设备的是______,______和______。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">？信源</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">？信宿</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">？变换器</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">x1.下列不属于通信传输处理信号形式分类的是（）D</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">A.模拟网</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">B.数字网</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">C.混合网</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt; color:#00aaff;">D.传输网</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt; font-style:italic;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(2)选择题和填空题模式的转换</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    点击填空题切换到填空题模式，点击选择题切换到选择题模式，任意选择一种模式，题目将会重新排列刷新。</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(3)确定键</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    如果答题框内有内容，点击确定时如果答案全部正确则进入下一题，否则错误的框内一把×。选择题的答案要与题库内的答案一致，区分字母大小写。</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    如果所有答题框内都没有内容，点击确定则显示答案。</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(4)下一题</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    进入下一题，如果所有题都做完时，将重新随机开始做题。</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(5)上一题</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    进入上一题。</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(6)帮助</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    查看帮助信息。</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">(7)资助</span></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:12pt;">    这个工具是匆忙中做的，没有仔细做UI，也没有做更多功能了，仅仅是实现了思路，如果使用的人数多（请查看鼓励作者），作者将继续升级工具。\n 作者：邹永佳</span></p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;"><br /></p><p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:18pt; font-weight:600; color:#ff0000;">谢谢使用我的垃圾软件</span></p><p align="center" style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:18pt; font-weight:600;"><br /></p></body></html>''')class Form(QWidget, Ui_Form):    """    Class documentation goes here.    """    def __init__(self, parent=None):        """        Constructor        @param parent reference to the parent widget        @type QWidget        """        super(Form, self).__init__(parent)        self.setupUi(self)        self.setWindowTitle('百题斩')        self.setFixedSize(730, 370)        self.xuan = {}        self.tian = {}        self.jian = {}        self.file = "tiku.txt"        self.num = 0        try:            self.init()            self.UI_tiku()        except:            pass        self.now_falg = 0        font = QtGui.QFont()        font.setFamily("宋体")        font.setPointSize(11)        self.line = QLineEdit(self)        self.line.setGeometry(QRect(90, 290, 121, 41))        self.line.setObjectName("line")        self.line1 = QLineEdit(self)        self.line1.setGeometry(QRect(220, 290, 121, 41))        self.line1.setObjectName("line1")        self.line2 = QLineEdit(self)        self.line2.setGeometry(QRect(350, 290, 121, 41))        self.line2.setObjectName("line2")        self.line3 = QLineEdit(self)        self.line3.setGeometry(QRect(480, 290, 121, 41))        self.line3.setObjectName("line3")        self.line4 = QLineEdit(self)        self.line4.setGeometry(QRect(610, 290, 121, 41))        self.line4.setObjectName("line4")        self.line.setFont(font)        self.line1.setFont(font)        self.line2.setFont(font)        self.line3.setFont(font)        self.line4.setFont(font)        self.line1.setVisible(False)        self.line2.setVisible(False)        self.line3.setVisible(False)        self.line4.setVisible(False)        self.line.returnPressed.connect(self.line_function)        self.line1.returnPressed.connect(self.line1_function)        self.line2.returnPressed.connect(self.line2_function)        self.line3.returnPressed.connect(self.line3_function)        self.line4.returnPressed.connect(self.line4_function)    def box(self, e):  # 消息：警告        QMessageBox.warning(self, "警告", e, QMessageBox.Yes)    def init(self):        # try:        #     fp = open("xuan.txt", 'r', encoding='utf-8')        #     self.xuan = eval(fp.read())        #     self.len_xuan = len(self.xuan)        #     self.item_xuan = list(self.xuan.keys())        #     shuffle(self.item_xuan)        #     fp1 = open("tian.txt", 'r', encoding='utf-8')        #     self.tian = eval(fp1.read())        #     self.len_tian = len(self.tian)        #     self.item_tian = list(self.tian.keys())        #     shuffle(self.item_tian)        #     fp.close()        #     fp1.close()        #     os.remove("xuan.txt")        #     os.remove("tian.txt")        # except:        try:            self.get_tiku()            fp = open("xuan.txt", 'r', encoding='utf-8')            self.xuan = eval(fp.read())            self.len_xuan = len(self.xuan)            self.item_xuan = list(self.xuan.keys())            shuffle(self.item_xuan)            fp1 = open("tian.txt", 'r', encoding='utf-8')            self.tian = eval(fp1.read())            self.len_tian = len(self.tian)            self.item_tian = list(self.tian.keys())            shuffle(self.item_tian)            fp2 = open("jian.txt", 'r', encoding='utf-8')            self.jian = eval(fp2.read())            self.len_jian = len(self.jian)            self.item_jian = list(self.jian.keys())            shuffle(self.item_jian)            fp.close()            fp1.close()            fp2.close()            remove("xuan.txt")            remove("tian.txt")            remove("jian.txt")        except:            self.box("没有题库文件，请点击导入题库。如果您是第一次使用，请将题库文件放在软件的同级目录并命名为tiku.txt.\n您可以查看帮助来建立您的题库文件。")    def UI_tiku(self):        try:            if self.num < self.len_xuan:                self.textBrowser.setText(self.item_xuan[self.num])                self.textBrowser.append(self.xuan[self.item_xuan[self.num]][1][:-1])                self.textBrowser.append(self.xuan[self.item_xuan[self.num]][2][:-1])                self.textBrowser.append(self.xuan[self.item_xuan[self.num]][3][:-1])                self.textBrowser.append(self.xuan[self.item_xuan[self.num]][4][:-1])            else:                self.textBrowser.setText("选择题答题完毕")        except:            pass    def get_tiku(self):        try:            with open(self.file, "r", encoding='utf-8') as fp:                txt = fp.readlines()                for x in txt:                    if x[0] == 't':                        self.tian[x[1:]] = []                        y = x[1:]                    elif x[0] == 'x':                        self.xuan[x[1:-2]] = [x[-2:-1]]                        y = x[1:-2]                    elif x[0] == 'j':                        self.jian[x] = []                        y = x                    elif x[0] == '?':                        self.tian[y].append(x[1:-1])                    elif x[0] == '#':                        self.jian[y].append(x)                    elif x[0] in ["A", "B", "C", "D"]:                        self.xuan[y].append(x)                    else:                        continue            with open("xuan.txt", "w", encoding='utf-8') as fp:                fp.write(str(self.xuan))            with open("tian.txt", "w", encoding='utf-8') as fp:                fp.write(str(self.tian))            with open("jian.txt", "w", encoding='utf-8') as fp:                fp.write(str(self.jian))        except:            self.box("没有题库文件，请点击导入题库。如果您是第一次使用，请将题库文件放在软件的同级目录并命名为tiku.txt.\n\n\n您可以查看帮助来建立您的题库文件。")    @pyqtSlot()    def on_pushButton_clicked(self):        try:            if self.pushButton.text() == "选择题":                self.pushButton.setText("填空题")                # self.line.releaseKeyboard()                # self.line1.releaseKeyboard()                # self.line2.releaseKeyboard()                # self.line3.releaseKeyboard()                # self.line4.releaseKeyboard()                self.line1.setEnabled(False)                self.line2.setEnabled(False)                self.line3.setEnabled(False)                self.line4.setEnabled(False)                self.line1.setVisible(False)                self.line2.setVisible(False)                self.line3.setVisible(False)                self.line4.setVisible(False)                shuffle(self.item_xuan)                self.num = 0                self.UI_tiku()                self.now_falg = 0            else:                self.pushButton.setText("选择题")                self.line1.setEnabled(True)                self.line2.setEnabled(True)                self.line3.setEnabled(True)                self.line4.setEnabled(True)                self.line1.setVisible(True)                self.line2.setVisible(True)                self.line3.setVisible(True)                self.line4.setVisible(True)                # self.line.grabKeyboard()                # self.line1.grabKeyboard()                # self.line2.grabKeyboard()                # self.line3.grabKeyboard()                # self.line4.grabKeyboard()                shuffle(self.item_tian)                self.textBrowser.setText(self.item_tian[0])                self.now_falg = 1                self.num = 0        except:            self.box("运行出错，请联系开发者。出错编号：001")    def clearline(self):        self.line.setText("")        self.line1.setText("")        self.line2.setText("")        self.textBrowser.setText(self.item_tian[self.num])    @pyqtSlot()    def on_pushButton_2_clicked(self):        try:            if self.now_falg == 0:                if self.line.text() == self.xuan[self.item_xuan[self.num]][0]:                    self.num += 1                    self.UI_tiku()                    self.line.setText("")                elif self.line.text() == "":                    self.line.setText(self.xuan[self.item_xuan[self.num]][0])                else:                    self.line.setText("×")            elif self.now_falg == 1:                self.tian_panduan()        except:            self.box("运行出错，请联系开发者！错误编码：002")    def tian_panduan(self):        x = []        x.append(self.line.text())        x.append(self.line1.text())        x.append(self.line2.text())        x.append(self.line3.text())        x.append(self.line4.text())        while '' in x:            x.remove('')        if set(x) == set(self.tian[self.item_tian[self.num]]):            self.num += 1            self.clearline()        else:            len1 = len(self.tian[self.item_tian[self.num]])            if x == []:                self.line.setText(self.tian[self.item_tian[self.num]][0])                if len1 > 1:                    self.line1.setText(self.tian[self.item_tian[self.num]][1])                if len1 > 2:                    self.line2.setText(self.tian[self.item_tian[self.num]][2])                if len1 > 3:                    self.line3.setText(self.tian[self.item_tian[self.num]][3])                if len1 == 5:                    self.line4.setText(self.tian[self.item_tian[self.num]][4])            elif len1 == 0:                self.num += 1                self.clearline()            elif len1 == 1:                if self.line.text() == self.tian[self.item_tian[self.num]][0]:                    self.num += 1                    self.clearline()                else:                    self.line.setText('×')                if self.line2.text() != "":                    self.line2.setText('×')                if self.line1.text() != "":                    self.line1.setText('×')            elif len1 == 2:                if self.line.text() == self.tian[self.item_tian[self.num]][0]:                    if self.line1.text() == self.tian[self.item_tian[self.num]][1]:                        self.num += 1                        self.clearline()                    else:                        self.line1.setText('×')                else:                    self.line.setText('×')                    if self.line1.text() != self.tian[self.item_tian[self.num]][1]:                        self.line1.setText('×')                if self.line2.text() != "":                    self.line2.setText('×')            elif len1 == 3:                if self.line.text() == self.tian[self.item_tian[self.num]][0]:                    if self.line1.text() == self.tian[self.item_tian[self.num]][1]:                        if self.line2.text() == self.tian[self.item_tian[self.num]][2]:                            self.num += 1                            self.clearline()                        else:                            self.line2.setText('×')                    else:                        self.line1.setText('×')                        if self.line2.text() != self.tian[self.item_tian[self.num]][2]:                            self.line2.setText('×')                else:                    self.line.setText('×')                    if self.line1.text() != self.tian[self.item_tian[self.num]][1]:                        self.line1.setText('×')                    if self.line2.text() != self.tian[self.item_tian[self.num]][2]:                        self.line2.setText('×')            elif len1 == 4:                if self.line.text() == self.tian[self.item_tian[self.num]][0]:                    if self.line1.text() == self.tian[self.item_tian[self.num]][1]:                        if self.line2.text() == self.tian[self.item_tian[self.num]][2]:                            if self.line3.text() == self.tian[self.item_tian[self.num]][3]:                                self.num += 1                                self.clearline()                            else:                                self.line3.setText('×')                        else:                            self.line2.setText('×')                            if self.line3.text() != self.tian[self.item_tian[self.num]][3]:                                self.line3.setText('×')                    else:                        self.line1.setText('×')                        if self.line2.text() != self.tian[self.item_tian[self.num]][2]:                            self.line2.setText('×')                        if self.line3.text() != self.tian[self.item_tian[self.num]][3]:                            self.line3.setText('×')                else:                    self.line.setText('×')                    if self.line1.text() != self.tian[self.item_tian[self.num]][1]:                        self.line1.setText('×')                    if self.line2.text() != self.tian[self.item_tian[self.num]][2]:                        self.line2.setText('×')                    if self.line3.text() != self.tian[self.item_tian[self.num]][3]:                        self.line3.setText('×')            elif len1 == 5:                if self.line.text() == self.tian[self.item_tian[self.num]][0]:                    if self.line1.text() == self.tian[self.item_tian[self.num]][1]:                        if self.line2.text() == self.tian[self.item_tian[self.num]][2]:                            if self.line3.text() == self.tian[self.item_tian[self.num]][3]:                                if self.line4.text() == self.tian[self.item_tian[self.num]][4]:                                    self.num += 1                                    self.clearline()                                else:                                    self.line4.setText('×')                            else:                                if self.line4.text() != self.tian[self.item_tian[self.num]][4]:                                    self.line4.setText('×')                                self.line3.setText('×')                        else:                            self.line2.setText('×')                            if self.line3.text() != self.tian[self.item_tian[self.num]][3]:                                self.line3.setText('×')                            if self.line4.text() != self.tian[self.item_tian[self.num]][4]:                                self.line4.setText('×')                    else:                        self.line1.setText('×')                        if self.line4.text() != self.tian[self.item_tian[self.num]][4]:                            self.line4.setText('×')                        if self.line2.text() != self.tian[self.item_tian[self.num]][2]:                            self.line2.setText('×')                        if self.line3.text() != self.tian[self.item_tian[self.num]][3]:                            self.line3.setText('×')                else:                    self.line.setText('×')                    if self.line1.text() != self.tian[self.item_tian[self.num]][1]:                        self.line1.setText('×')                    if self.line2.text() != self.tian[self.item_tian[self.num]][2]:                        self.line2.setText('×')                    if self.line3.text() != self.tian[self.item_tian[self.num]][3]:                        self.line3.setText('×')                    if self.line4.text() != self.tian[self.item_tian[self.num]][4]:                        self.line4.setText('×')    @pyqtSlot()    def on_pushButton_3_clicked(self):        try:            self.num -= 1            if self.num <= 0:                self.num = 0            if self.now_falg == 0:                self.UI_tiku()                self.line.setText("")            else:                self.clearline()        except:            self.box("运行出错，请联系开发者！错误编码：003")    @pyqtSlot()    def on_pushButton_4_clicked(self):        try:            self.num += 1            if self.now_falg == 0:                if self.num >= self.len_xuan:                    self.num = 0                    shuffle(self.item_xuan)                self.UI_tiku()                self.line.setText("")            else:                if self.num >= self.len_tian:                    self.num = 0                    shuffle(self.item_tian)                self.clearline()        except:            self.box("运行出错，请联系开发者！错误编码：004")    @pyqtSlot()    def on_pushButton_5_clicked(self):        try:            self.chile_Win = ChildWindow()            self.chile_Win.show()            self.chile_Win.exec_()        except:            self.box("运行出错，请联系开发者！错误编码：005")    @pyqtSlot()    def on_pushButton_7_clicked(self):        self.line.setVisible(False)        self.line1.setVisible(False)        self.line2.setVisible(False)        self.line3.setVisible(False)        self.line4.setVisible(False)        self.now_falg = 3        self.textBrowser.setText(self.jian[])        self.textBrowser.append()    @pyqtSlot()    def on_pushButton_6_clicked(self):        try:            self.file = QFileDialog.getOpenFileNames(self, "请选择要添加的文件", "./", "Text Files (*.txt);;All Files (*)")            self.file = list(self.file)[0][0]            fp = open(self.file, 'r', encoding="utf-8")            x = fp.read()            fp.close()            fp1 = open("tiku.txt", 'w', encoding="utf-8")            fp1.write(x)            fp1.close()            self.init()            self.UI_tiku()        except:            pass    def line_function(self):        if self.now_falg == 0:            if self.line.text() == self.xuan[self.item_xuan[self.num]][0]:                self.num += 1                self.UI_tiku()                self.line.setText("")            elif self.line.text() == "":                self.line.setText(self.xuan[self.item_xuan[self.num]][0])            else:                self.line.setText("×")        else:            if len(self.tian[self.item_tian[self.num]]) != 1:                if self.line.text() in self.tian[self.item_tian[self.num]]:                    print()                    self.line1.setFocus()                else:                    self.line.selectAll()            else:                if self.line.text() == self.tian[self.item_tian[self.num]][0]:                    self.num += 1                    self.clearline()                else:                    self.line.setText('×')    def line1_function(self):        if len(self.tian[self.item_tian[self.num]]) != 2:            if self.line1.text() in self.tian[self.item_tian[self.num]]:                self.line2.setFocus()            else:                self.line1.selectAll()        else:            self.tian_panduan()            self.line.setFocus()    def line2_function(self):        if len(self.tian[self.item_tian[self.num]]) != 3:            if self.line2.text() in self.tian[self.item_tian[self.num]]:                self.line3.setFocus()            else:                self.line2.selectAll()        else:            self.tian_panduan()            self.line.setFocus()    def line3_function(self):        if len(self.tian[self.item_tian[self.num]]) != 4:            if self.line3.text() in self.tian[self.item_tian[self.num]]:                self.line4.setFocus()            else:                self.line3.selectAll()        else:            self.tian_panduan()            self.line.setFocus()    def line4_function(self):        self.tian_panduan()        self.line.setFocus()if __name__ == "__main__":    app = QApplication(sys.argv)    Fo = Form()    ui = Ui_Form()    Fo.show()    sys.exit(app.exec_())